{
  "hash": "49e099c039b093c3d1418e2ee4139464",
  "result": {
    "markdown": "---\ntitle: \"Statistical Concepts\"\n---\n\n\n# Assigment 2\nLoad the table random_vars.rds. You can either\n\n* run the command: random_vars <- readRDS(\"your_download_folder/random_vars.rds\")\n* or find the file in the Files pane and select it.\n\nAfter you load the table, get an overview of what it contains with View(random_vars).\n\n* For each variable, compute the following values. You can use the built-in functions or use the mathematical formulas.\n    + expected value\n    + variance\n    + standard deviation\n* Explain, if it makes sense to compare the standard deviations.\n* Then, examine the relationship between both variables and compute:\n    + covariance\n    + correlation\n* What measure is easier to interpret? Please discuss your interpretation.\n* Compute the conditional expected value for:\n    + E[income | age <= 18]\n    + E[income | age $\\epsilon$ [18,65)]\n    + E[income | age >= 65]\n    \n## Assignment 2.1\n\n\n\n::: {.cell hash='02_statistics_cache/html/unnamed-chunk-2_66f5daadab67c875626d076930f4d2fb'}\n\n```{.r .cell-code}\n# Load the data from random_vars.rds file\ndata <- readRDS(\"data/random_vars.rds\")  # Replace 'path_to_your_folder' with the actual path\n\n# View the loaded data\nView(data)\n\n# Compute expected value, variance, and standard deviation for each variable\nsummary_stats <- data.frame(\n  Variable = colnames(data),\n  Expected_Value = sapply(data, mean),\n  Variance = sapply(data, var),\n  Standard_Deviation = sapply(data, sd)\n)\n\n# View summary statistics\nsummary_stats\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Variable\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Expected_Value\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Variance\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Standard_Deviation\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"age\",\"2\":\"33.471\",\"3\":\"340.6078\",\"4\":\"18.45556\",\"_rn_\":\"age\"},{\"1\":\"income\",\"2\":\"3510.731\",\"3\":\"8625645.8445\",\"4\":\"2936.94498\",\"_rn_\":\"income\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n## Assignment 2.2\nStandard deviation provides insights into the variability of individual variables, comparing relationships between 'age' and 'income' would benefit more from measures like covariance and correlation to understand how these variables are related or associated with each other but comparing covariance is not easy. Where as in correlation, we get values between -1 and 1 which provides a standardized measure to interpret the strength and direction of linear relationship between age and income.\n\n## Assignment 2.3\n\n::: {.cell hash='02_statistics_cache/html/unnamed-chunk-3_71114dc411bcea6a70fe4393c3e94fd6'}\n\n```{.r .cell-code}\n# Compute covariance and correlation for each variable\nsummary_stats <- data.frame(\n  Variable = colnames(data),\n  Covariance = sapply(data, function(x) sapply(data, function(y) cov(x, y))),\n  Correlation = sapply(data, function(x) sapply(data, function(y) cor(x, y)))\n)\n\n# View summary statistics\nsummary_stats\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Variable\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Covariance.age\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Covariance.income\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Correlation.age\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Correlation.income\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"age\",\"2\":\"340.6078\",\"3\":\"29700.15\",\"4\":\"1.0000000\",\"5\":\"0.5479432\",\"_rn_\":\"age\"},{\"1\":\"income\",\"2\":\"29700.1468\",\"3\":\"8625645.84\",\"4\":\"0.5479432\",\"5\":\"1.0000000\",\"_rn_\":\"income\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\nIt is easier to interpret correlation as compared to covarience as discussed above.\n\n## Assignment 2.4\n\n::: {.cell hash='02_statistics_cache/html/unnamed-chunk-4_650b464eb72872db4dd2d6694dd3f376'}\n\n```{.r .cell-code}\n# Calculate conditional expected values for income based on age ranges\nconditional_expected_value <- data %>%\n  summarize(\n    E_income_age_18 = mean(filter(., age <= 18)$income),\n    E_income_age_18_65 = mean(filter(., age >= 18 & age < 65)$income),\n    E_income_age_65 = mean(filter(., age >= 65)$income)\n  )\n\nconditional_expected_value\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"E_income_age_18\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"E_income_age_18_65\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"E_income_age_65\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"389.6074\",\"2\":\"4685.734\",\"3\":\"1777.237\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "377e31abc389179268e0a3c755242f99",
  "result": {
    "markdown": "---\ntitle: \"Probability Theory\"\n---\n\n\n# Assignment 1\n\n::: {.cell hash='01_probability_cache/html/unnamed-chunk-1_91299bbfecdce22a56f8bc95c969c319'}\n\n```{.r .cell-code}\n#load libraries\nlibrary(ggVennDiagram)\n```\n:::\n\n\nDefine being on time as event **T**, being not on time as **!T**, having a change in scope as **S** and having no change in scope as **!S** \n\nThen, compute the following probabilities and the sum of all four probabilities.\n\n\nP(T∩S): Probability of being on time and having a change in scope.\n\nP(T∩!S): Probability of being on time and having no change in scope.\n\nP(!T∩S): Probability of not being on time and having a change in scope.\n\nP(!T∩!S): Probability of not being on time and having no change in scope.\n\n\n\n## Given the following definitions:\n\n\nP(S): Probability of having a change in scope.\n\nP(!S): Probability of having no change in scope.\n\nP(T∣S): Probability of being on time having a change in scope.\n\nP(T∣!S): Probability of being on time having no change in scope.\n\nP(!T∣S): Probability of not being on time having a change in scope.\n\nP(!T∣!S): Probability of not being on time having no change in scope.\n\n\n## The general equations for the Joint probabilities are:\n\n\nP(T∩S)=P(S)×P(T∣S)\n\nP(T∩!S)=P(!S)×P(T∣!S)\n\nP(!T∩S)=P(S)×P(!T∣S)\n\nP(!T∩!S)=P(S)×P(!T∣!S)\n\n\n## Function to calculate probabilities based on provided inputs\n\n\n::: {.cell hash='01_probability_cache/html/unnamed-chunk-2_ad907ebcad82df01a2ec28f1460ba1e7'}\n\n```{.r .cell-code}\ncalculate_probabilities <- function(P_S, P_not_S, P_T_given_S, P_not_T_given_S, P_not_T_and_S, P_not_T_and_not_S) {\n    # Calculate probabilities using the general equations\n    P_T_and_S <- P_S * P_T_given_S\n    P_T_and_not_S <- P_not_S * P_T_given_not_S\n    P_not_T_and_S <- P_S * P_not_T_given_S\n    P_not_T_and_not_S <- P_not_S * P_not_T_given_not_S\n\n    # Calculate the sum of all probabilities\n    sum_all_probabilities <- P_T_and_S + P_T_and_not_S + P_not_T_and_S + P_not_T_and_not_S\n\n    # Return the calculated probabilities and the sum\n    return(list(\n        P_T_and_S = P_T_and_S,\n        P_T_and_not_S = P_T_and_not_S,\n        P_not_T_and_S = P_not_T_and_S,\n        P_not_T_and_not_S = P_not_T_and_not_S,\n        Sum_all_probabilities = sum_all_probabilities\n    ))\n}\n```\n:::\n\n\n## Now to calculate the probabilities, example values are taken from probability tree to compute the probabilities\n\n![Probability Tree](../../assets/img/01_tree.png)\n\n::: {.cell hash='01_probability_cache/html/unnamed-chunk-3_e19a1d087a74299ccc949d2a50429eab'}\n\n```{.r .cell-code}\nP_S <- 0.3\nP_not_S <- 0.7\nP_T_given_S <- 0.2\nP_not_T_given_S <- 1 - P_T_given_S\nP_T_given_not_S <- 0.6\nP_not_T_given_not_S <- 1 - P_T_given_not_S\n```\n:::\n\n## Calculating probabilities using the function\n\n::: {.cell hash='01_probability_cache/html/unnamed-chunk-4_8c77c7e818e1ab06f10f2a0abcbf9807'}\n\n```{.r .cell-code}\nprobabilities <- calculate_probabilities(P_S, P_not_S, P_T_given_S, P_not_T_given_S, P_T_given_not_S, P_not_T_given_not_S)\n```\n:::\n\n## Calculating joint probabilities and sum of all probabilities\n\n::: {.cell hash='01_probability_cache/html/unnamed-chunk-5_aefc9163016373747da7f3d290323e05'}\n\n```{.r .cell-code}\nprobabilities$P_T_and_S  #P(T∩S)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.06\n```\n:::\n\n```{.r .cell-code}\nprobabilities$P_T_and_not_S #P(T∩!S)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.42\n```\n:::\n\n```{.r .cell-code}\nprobabilities$P_not_T_and_S #P(!T∩S)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.24\n```\n:::\n\n```{.r .cell-code}\nprobabilities$P_not_T_and_not_S #P(!T∩!S)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.28\n```\n:::\n\n```{.r .cell-code}\nprobabilities$Sum_all_probabilities # P(T∩S) + P(T∩!S) + P(!T∩S) + P(!T∩!S)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 1\n```\n:::\n:::\n\n# Assignment 2\n\n## Venn Diagram Code\n\n\n::: {.cell hash='01_probability_cache/html/unnamed-chunk-6_6757e04ea9c53ce50e8315cc25b574f7'}\n\n```{.r .cell-code}\n# Number of obervations\nn <- 1000\n\n# Create tibble\napp_usage <- tibble(\n  # Create user_id in increasing order\n  user_id = 1:n,\n  # Randomly sample if smartphone was used\n  smartphone = rbinom(n, 1, 0.4),\n  # Sample if tablet was used. More likely if smartphone was not used.\n  tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),\n  # Sample if computer was used. More likely if tablet was not used.\n  computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))\n)\n\n# If no device has value of 1, we set smartphone to 1\napp_usage <- app_usage %>%\n  rowwise() %>% \n  mutate(smartphone = ifelse(sum(smartphone, tablet, computer) == 0, 1, smartphone))\n\nhead(app_usage, 10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"user_id\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"smartphone\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"tablet\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"computer\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"0\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\"},{\"1\":\"4\",\"2\":\"1\",\"3\":\"0\",\"4\":\"1\"},{\"1\":\"5\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\"},{\"1\":\"6\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\"},{\"1\":\"7\",\"2\":\"1\",\"3\":\"1\",\"4\":\"0\"},{\"1\":\"8\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\"},{\"1\":\"9\",\"2\":\"1\",\"3\":\"0\",\"4\":\"0\"},{\"1\":\"10\",\"2\":\"0\",\"3\":\"1\",\"4\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# Show column sums\ncolSums(app_usage)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>    user_id smartphone     tablet   computer \n#>     500500        610        367        242\n```\n:::\n\n```{.r .cell-code}\n# Equivalent commands to select specific columns\n#colSums(app_usage[, 2:4])\n#colSums(app_usage[, c(\"smartphone\", \"tablet\", \"computer\")])\napp_usage %>% select(smartphone, tablet, computer) %>% colSums()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> smartphone     tablet   computer \n#>        610        367        242\n```\n:::\n\n```{.r .cell-code}\n# Set of phone, tablet and computer users\nset_phon <- which(app_usage$smartphone == 1)\nset_tabl <- which(app_usage$tablet == 1)\nset_comp <- which(app_usage$computer == 1)\n\n# List of all sets\nsets_all <- list(set_phon, set_tabl, set_comp)\n\n# Load additional package for plotting Venn diagrams\n\n# Plot Venn diagram\nggVennDiagram(sets_all, category.names = c(\"Smartphone\", \"Tablet\", \"Computer\"),\n              label_percent_digit = 2) +\n  # Customizing appearance\n  theme(legend.position = \"none\", \n        panel.background = element_rect(\"grey\"),\n        strip.background = element_rect(\"grey\")) +\n  scale_x_continuous(expand = expansion(mult = .24))\n```\n\n::: {.cell-output-display}\n![](01_probability_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# List of all sets\nsets_all <- list(set_phon, set_tabl, set_comp)\n# Percentage of customers using all three devices\ncustomers_using_all_three <- Reduce(intersect, sets_all)\npercentage_using_all_three <- length(customers_using_all_three) / n * 100\n\n\n\n# Customers using at least two devices\ncustomers_using_at_least_two <- (length(Reduce(intersect, sets_all[c(1, 3)])) +\n                                 length(Reduce(intersect, sets_all[c(1, 2)])) +\n                                 length(Reduce(intersect, sets_all[c(2, 3)])) -\n                                 2 * length(customers_using_all_three))\n\npercentage_using_at_least_two <- customers_using_at_least_two / n * 100\n\n# Customers using only one device\ncustomers_using_only_one <- (length(set_phon) + length(set_tabl) + length(set_comp) -\n                              2 * length(Reduce(intersect, sets_all[c(1, 3)])) -\n                              2 * length(Reduce(intersect, sets_all[c(1, 2)])) -\n                              2 * length(Reduce(intersect, sets_all[c(2, 3)])) +\n                              3 * length(customers_using_all_three))\n\npercentage_using_only_one <- customers_using_only_one / n * 100\n```\n:::\n\n## Answers generated from the above Venn diagram\n\n::: {.cell hash='01_probability_cache/html/unnamed-chunk-7_01de1dc042fc6389ae7c1be26c1e49b3'}\n\n```{.r .cell-code}\n# Percentage of customers using all three devices (A∩B∩C)/n\npercentage_using_all_three\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.6\n```\n:::\n\n```{.r .cell-code}\n# Percentage of customers using at least two devices ((A∩B)+(A∩C)+(B∩C)-2*(A∩B∩C))/n\npercentage_using_at_least_two\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 21.3\n```\n:::\n\n```{.r .cell-code}\n# Percentage of customers using only one device (|A|+|B|+|C|-2*(A∩B)-2*(A∩C)-2*(B∩C)+3*(A∩B∩C))/n\npercentage_using_only_one\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 78.7\n```\n:::\n:::\n\n![Course Website Venn Diagram](../../assets/img/Venn.png)\n\n## Answers generated from the Course Website's Venn diagram\nPercentage of customers using all three devices = 0.5\n\nPercentage of customers using at least two devices = 19.9\n\nPercentage of customers using only one device = 80.1\n\n\n# Assignment 3\n## Given the following definitions:\n\nA: Product is faulty vs !A: Product is flawless\n\nB: Alarm is triggered vs !B: No Alarm\n\nP(A): Probability of product being faulty\n\nP(B∣A): Probability of alarm being triggered when product is faulty.\n\nP(B∣!A): Probability of alarm being triggered when product is flawless.\n\n\n::: {.cell hash='01_probability_cache/html/unnamed-chunk-8_89bfea6f56110c463803d7cd936cd6dc'}\n\n```{.r .cell-code}\nP_A <- 0.04\nP_not_A <- 1 - P_A\nP_B_given_A <- 0.97\nP_B_given_not_A <- 0.01\n\n\n# For P(!A|B) and P(A|B) we use Bayes' theorem but for that we need to find P(B) first which is the probability of alarm being triggered:\n\nP_B <- (P_B_given_A*P_A) + (P_B_given_not_A*P_not_A)\n\nP_not_A_given_B <- (P_B_given_not_A*P_not_A)/P_B\n\nP_not_A_given_B\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.1983471\n```\n:::\n\n```{.r .cell-code}\nP_A_given_B <- (P_B_given_A*P_A)/P_B\n\nP_A_given_B\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.8016529\n```\n:::\n:::\n\nThese results show that in case the alarm is triggered, there is a possibility of about 19.83 % that the product is flawless and a probability of 80.16 % that the product is faulty.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}